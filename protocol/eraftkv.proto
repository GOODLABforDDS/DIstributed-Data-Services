syntax = "proto3";
package eraftkv;

enum ErrorCode {
  REQUEST_NOT_LEADER_NODE = 0;
  NODE_IS_DOWN = 1;
  REQUEST_TIMEOUT = 2;
}

message RequestVoteReq {
  bool  prevote = 1;
  int64 term = 2;
  int64 candidtate_id = 3;
  int64 last_log_idx = 4;
  int64 last_log_term = 5;
}

message RequestVoteResp {
  bool  prevote = 1;
  int64 request_term = 2;
  int64 term = 3;
  bool  vote_granted = 4;
  int64 leader_id = 5;
}

enum EntryType {
  Normal = 0;
  ConfChange = 1;
  NoOp = 2;
}

message Entry {
  int64     term = 1;
  int64     id = 2;
  EntryType e_type = 3;
  int64     data_size = 4;
  bytes     data = 5;
}

message AppendEntriesReq {
  int64          leader_id = 1;
  int64          message_index = 2;
  int64          term = 3;
  int64          prev_log_index = 4;
  int64          prev_log_term = 5;
  int64          leader_commit = 6;
  bool           is_heartbeat = 7;
  repeated Entry entries = 8;
}

message AppendEntriesResp {
  string message_token = 1;
  int64  term = 2;
  bool   success = 3;
  int64  current_index = 4;
  int64  conflict_index = 5;
  int64  conflict_term = 6;
}

message SnapshotBlock {
  int64 offset = 1;
  bytes data = 2;
  int64 block_size = 3;
  bool  is_last_chunk = 4;
}

message SnapshotReq {
  int64         term = 1;
  int64         leader_id = 2;
  string        message_index = 3;
  int64         snapshot_index = 4;
  int64         snapshot_term = 5;
  SnapshotBlock block = 6;
}

message SnapshotResp {
  int64  term = 1;
  string message_index = 2;
  int64  offset = 3;
  bool   success = 4;
  bool   is_last_chunk = 5;
}

enum SlotStatus {
  Running = 0;
  Migrating = 1;
  Importing = 2;
  Init = 3;
}

message Slot {
  int64          id = 1;
  SlotStatus     slot_status = 2;
  int64          status_modify_time = 3;
}

enum ServerStatus {
  Up = 0;
  Down = 1;
}

message Server {
  int64        id = 1;
  string       address = 2;
  ServerStatus server_status = 3;
}

message ShardGroup {
  int64           id = 1;
  repeated Slot   slots = 2;
  repeated Server servers = 3;
  int64           leader_id = 4;
}

enum ChangeType {
  ClusterInit = 0;
  ShardJoin = 1;
  ShardLeave = 2;
  ShardsQuery = 3;
  SlotMove = 4;
  ServerJoin = 5;
  ServerLeave = 6;
  MembersQuery = 7;
}

enum HandleServerType {
  MetaServer = 0;
  DataServer = 1;
}

message ClusterConfigChangeReq {
  ChangeType              change_type = 1;
  HandleServerType        handle_server_type = 2;
  int64                   shard_id = 3;
  Server                  server = 4;
  int64                   config_version = 5;
  int64                   op_count = 6;
  int64                   command_id = 7;
  ShardGroup              shard_group = 8;
}

message ClusterConfigChangeResp {
  bool                success = 1;
  repeated ShardGroup shard_group = 2;
  int64               config_version = 3;
}

enum ClientOpType {
  Noop = 0;
  Put = 1;
  Get = 2;
  Del = 3;
  Scan = 4;
}

message KvOpPair {
  ClientOpType op_type = 1;
  string        key = 2;
  string        value = 3;
  bool         success = 4;
  int64        op_count = 5;
}


message ClientOperationReq {
  uint64            op_timestamp = 1;
  repeated KvOpPair kvs = 2;
}

message ClientOperationResp {
  repeated KvOpPair ops = 1;
  ErrorCode  error_code = 2;
  int64     leader_addr = 3;
}

service ERaftKv {
  rpc RequestVote(RequestVoteReq) returns (RequestVoteResp);
  rpc AppendEntries(AppendEntriesReq) returns (AppendEntriesResp);
  rpc Snapshot(SnapshotReq) returns (SnapshotResp);

  rpc ProcessRWOperation(ClientOperationReq) returns (ClientOperationResp);
  rpc ClusterConfigChange(ClusterConfigChangeReq)
      returns (ClusterConfigChangeResp);
}
