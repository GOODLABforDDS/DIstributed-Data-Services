// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eraftkv.proto

#ifndef PROTOBUF_INCLUDED_eraftkv_2eproto
#define PROTOBUF_INCLUDED_eraftkv_2eproto

#include <google/protobuf/stubs/common.h>

#include <string>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/message.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_eraftkv_2eproto

namespace protobuf_eraftkv_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField          entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable    schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable
                                          serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_eraftkv_2eproto
namespace eraftkv {
class AppendEntriesReq;
class AppendEntriesReqDefaultTypeInternal;
extern AppendEntriesReqDefaultTypeInternal _AppendEntriesReq_default_instance_;
class AppendEntriesResp;
class AppendEntriesRespDefaultTypeInternal;
extern AppendEntriesRespDefaultTypeInternal
    _AppendEntriesResp_default_instance_;
class ClientOperationReq;
class ClientOperationReqDefaultTypeInternal;
extern ClientOperationReqDefaultTypeInternal
    _ClientOperationReq_default_instance_;
class ClientOperationResp;
class ClientOperationRespDefaultTypeInternal;
extern ClientOperationRespDefaultTypeInternal
    _ClientOperationResp_default_instance_;
class ClusterConfigChangeReq;
class ClusterConfigChangeReqDefaultTypeInternal;
extern ClusterConfigChangeReqDefaultTypeInternal
    _ClusterConfigChangeReq_default_instance_;
class ClusterConfigChangeResp;
class ClusterConfigChangeRespDefaultTypeInternal;
extern ClusterConfigChangeRespDefaultTypeInternal
    _ClusterConfigChangeResp_default_instance_;
class Entry;
class EntryDefaultTypeInternal;
extern EntryDefaultTypeInternal _Entry_default_instance_;
class KeyRange;
class KeyRangeDefaultTypeInternal;
extern KeyRangeDefaultTypeInternal _KeyRange_default_instance_;
class KvOpPair;
class KvOpPairDefaultTypeInternal;
extern KvOpPairDefaultTypeInternal _KvOpPair_default_instance_;
class RequestVoteReq;
class RequestVoteReqDefaultTypeInternal;
extern RequestVoteReqDefaultTypeInternal _RequestVoteReq_default_instance_;
class RequestVoteResp;
class RequestVoteRespDefaultTypeInternal;
extern RequestVoteRespDefaultTypeInternal _RequestVoteResp_default_instance_;
class Server;
class ServerDefaultTypeInternal;
extern ServerDefaultTypeInternal _Server_default_instance_;
class ShardGroup;
class ShardGroupDefaultTypeInternal;
extern ShardGroupDefaultTypeInternal _ShardGroup_default_instance_;
class SnapshotBlock;
class SnapshotBlockDefaultTypeInternal;
extern SnapshotBlockDefaultTypeInternal _SnapshotBlock_default_instance_;
class SnapshotReq;
class SnapshotReqDefaultTypeInternal;
extern SnapshotReqDefaultTypeInternal _SnapshotReq_default_instance_;
class SnapshotResp;
class SnapshotRespDefaultTypeInternal;
extern SnapshotRespDefaultTypeInternal _SnapshotResp_default_instance_;
}  // namespace eraftkv
namespace google {
namespace protobuf {
template <>
::eraftkv::AppendEntriesReq*
    Arena::CreateMaybeMessage<::eraftkv::AppendEntriesReq>(Arena*);
template <>
::eraftkv::AppendEntriesResp*
    Arena::CreateMaybeMessage<::eraftkv::AppendEntriesResp>(Arena*);
template <>
::eraftkv::ClientOperationReq*
    Arena::CreateMaybeMessage<::eraftkv::ClientOperationReq>(Arena*);
template <>
::eraftkv::ClientOperationResp*
    Arena::CreateMaybeMessage<::eraftkv::ClientOperationResp>(Arena*);
template <>
::eraftkv::ClusterConfigChangeReq*
    Arena::CreateMaybeMessage<::eraftkv::ClusterConfigChangeReq>(Arena*);
template <>
::eraftkv::ClusterConfigChangeResp*
    Arena::CreateMaybeMessage<::eraftkv::ClusterConfigChangeResp>(Arena*);
template <>
::eraftkv::Entry* Arena::CreateMaybeMessage<::eraftkv::Entry>(Arena*);
template <>
::eraftkv::KeyRange* Arena::CreateMaybeMessage<::eraftkv::KeyRange>(Arena*);
template <>
::eraftkv::KvOpPair* Arena::CreateMaybeMessage<::eraftkv::KvOpPair>(Arena*);
template <>
::eraftkv::RequestVoteReq* Arena::CreateMaybeMessage<::eraftkv::RequestVoteReq>(
    Arena*);
template <>
::eraftkv::RequestVoteResp*
    Arena::CreateMaybeMessage<::eraftkv::RequestVoteResp>(Arena*);
template <>
::eraftkv::Server* Arena::CreateMaybeMessage<::eraftkv::Server>(Arena*);
template <>
::eraftkv::ShardGroup* Arena::CreateMaybeMessage<::eraftkv::ShardGroup>(Arena*);
template <>
::eraftkv::SnapshotBlock* Arena::CreateMaybeMessage<::eraftkv::SnapshotBlock>(
    Arena*);
template <>
::eraftkv::SnapshotReq* Arena::CreateMaybeMessage<::eraftkv::SnapshotReq>(
    Arena*);
template <>
::eraftkv::SnapshotResp* Arena::CreateMaybeMessage<::eraftkv::SnapshotResp>(
    Arena*);
}  // namespace protobuf
}  // namespace google
namespace eraftkv {

enum ErrorCode {
  REQUEST_NOT_LEADER_NODE = 0,
  NODE_IS_DOWN = 1,
  REQUEST_TIMEOUT = 2,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool            ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = REQUEST_NOT_LEADER_NODE;
const ErrorCode ErrorCode_MAX = REQUEST_TIMEOUT;
const int       ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string&               ErrorCode_Name(ErrorCode value) {
                return ::google::protobuf::internal::NameOfEnum(ErrorCode_descriptor(),
                                                  value);
}
inline bool ErrorCode_Parse(const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
      ErrorCode_descriptor(), name, value);
}
enum EntryType {
  Normal = 0,
  JoinNode = 1,
  LeaveNode = 2,
  JoinGroup = 3,
  LeaveGroup = 4,
  NoOp = 5,
  EntryType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntryType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool            EntryType_IsValid(int value);
const EntryType EntryType_MIN = Normal;
const EntryType EntryType_MAX = NoOp;
const int       EntryType_ARRAYSIZE = EntryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntryType_descriptor();
inline const ::std::string&               EntryType_Name(EntryType value) {
                return ::google::protobuf::internal::NameOfEnum(EntryType_descriptor(),
                                                  value);
}
inline bool EntryType_Parse(const ::std::string& name, EntryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntryType>(
      EntryType_descriptor(), name, value);
}
enum KeyRangeStatus {
  Running = 0,
  Migrating = 1,
  Importing = 2,
  Init = 3,
  KeyRangeStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  KeyRangeStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool                 KeyRangeStatus_IsValid(int value);
const KeyRangeStatus KeyRangeStatus_MIN = Running;
const KeyRangeStatus KeyRangeStatus_MAX = Init;
const int            KeyRangeStatus_ARRAYSIZE = KeyRangeStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* KeyRangeStatus_descriptor();
inline const ::std::string& KeyRangeStatus_Name(KeyRangeStatus value) {
  return ::google::protobuf::internal::NameOfEnum(KeyRangeStatus_descriptor(),
                                                  value);
}
inline bool KeyRangeStatus_Parse(const ::std::string& name,
                                 KeyRangeStatus*      value) {
  return ::google::protobuf::internal::ParseNamedEnum<KeyRangeStatus>(
      KeyRangeStatus_descriptor(), name, value);
}
enum ServerStatus {
  Up = 0,
  Down = 1,
  ServerStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool               ServerStatus_IsValid(int value);
const ServerStatus ServerStatus_MIN = Up;
const ServerStatus ServerStatus_MAX = Down;
const int          ServerStatus_ARRAYSIZE = ServerStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerStatus_descriptor();
inline const ::std::string& ServerStatus_Name(ServerStatus value) {
  return ::google::protobuf::internal::NameOfEnum(ServerStatus_descriptor(),
                                                  value);
}
inline bool ServerStatus_Parse(const ::std::string& name, ServerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerStatus>(
      ServerStatus_descriptor(), name, value);
}
enum ClusterConfigChangeType {
  AddServer = 0,
  RemoveServer = 1,
  ClusterConfigChangeType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::google::protobuf::kint32min,
  ClusterConfigChangeType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::google::protobuf::kint32max
};
bool                          ClusterConfigChangeType_IsValid(int value);
const ClusterConfigChangeType ClusterConfigChangeType_MIN = AddServer;
const ClusterConfigChangeType ClusterConfigChangeType_MAX = RemoveServer;
const int ClusterConfigChangeType_ARRAYSIZE = ClusterConfigChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClusterConfigChangeType_descriptor();
inline const ::std::string&               ClusterConfigChangeType_Name(
                  ClusterConfigChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
      ClusterConfigChangeType_descriptor(), value);
}
inline bool ClusterConfigChangeType_Parse(const ::std::string&     name,
                                          ClusterConfigChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClusterConfigChangeType>(
      ClusterConfigChangeType_descriptor(), name, value);
}
enum ClientOpType {
  Put = 0,
  Get = 1,
  Del = 2,
  Scan = 3,
  ClientOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool               ClientOpType_IsValid(int value);
const ClientOpType ClientOpType_MIN = Put;
const ClientOpType ClientOpType_MAX = Scan;
const int          ClientOpType_ARRAYSIZE = ClientOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientOpType_descriptor();
inline const ::std::string& ClientOpType_Name(ClientOpType value) {
  return ::google::protobuf::internal::NameOfEnum(ClientOpType_descriptor(),
                                                  value);
}
inline bool ClientOpType_Parse(const ::std::string& name, ClientOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientOpType>(
      ClientOpType_descriptor(), name, value);
}
// ===================================================================

class RequestVoteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.RequestVoteReq)
                                                           */
{
 public:
  RequestVoteReq();
  virtual ~RequestVoteReq();

  RequestVoteReq(const RequestVoteReq& from);

  inline RequestVoteReq& operator=(const RequestVoteReq& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  RequestVoteReq(RequestVoteReq&& from) noexcept : RequestVoteReq() {
    *this = ::std::move(from);
  }

  inline RequestVoteReq& operator=(RequestVoteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestVoteReq&                 default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestVoteReq* internal_default_instance() {
    return reinterpret_cast<const RequestVoteReq*>(
        &_RequestVoteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;

  void        Swap(RequestVoteReq* other);
  friend void swap(RequestVoteReq& a, RequestVoteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestVoteReq* New() const final {
    return CreateMaybeMessage<RequestVoteReq>(NULL);
  }

  RequestVoteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestVoteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestVoteReq& from);
  void MergeFrom(const RequestVoteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestVoteReq* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 term = 2;
  void                      clear_term();
  static const int          kTermFieldNumber = 2;
  ::google::protobuf::int64 term() const;
  void                      set_term(::google::protobuf::int64 value);

  // int64 candidtate_id = 3;
  void                      clear_candidtate_id();
  static const int          kCandidtateIdFieldNumber = 3;
  ::google::protobuf::int64 candidtate_id() const;
  void                      set_candidtate_id(::google::protobuf::int64 value);

  // int64 last_log_idx = 4;
  void                      clear_last_log_idx();
  static const int          kLastLogIdxFieldNumber = 4;
  ::google::protobuf::int64 last_log_idx() const;
  void                      set_last_log_idx(::google::protobuf::int64 value);

  // int64 last_log_term = 5;
  void                      clear_last_log_term();
  static const int          kLastLogTermFieldNumber = 5;
  ::google::protobuf::int64 last_log_term() const;
  void                      set_last_log_term(::google::protobuf::int64 value);

  // bool prevote = 1;
  void             clear_prevote();
  static const int kPrevoteFieldNumber = 1;
  bool             prevote() const;
  void             set_prevote(bool value);

  // @@protoc_insertion_point(class_scope:eraftkv.RequestVoteReq)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64                               term_;
  ::google::protobuf::int64                               candidtate_id_;
  ::google::protobuf::int64                               last_log_idx_;
  ::google::protobuf::int64                               last_log_term_;
  bool                                                    prevote_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestVoteResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.RequestVoteResp)
                                                            */
{
 public:
  RequestVoteResp();
  virtual ~RequestVoteResp();

  RequestVoteResp(const RequestVoteResp& from);

  inline RequestVoteResp& operator=(const RequestVoteResp& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  RequestVoteResp(RequestVoteResp&& from) noexcept : RequestVoteResp() {
    *this = ::std::move(from);
  }

  inline RequestVoteResp& operator=(RequestVoteResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestVoteResp&                default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestVoteResp* internal_default_instance() {
    return reinterpret_cast<const RequestVoteResp*>(
        &_RequestVoteResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;

  void        Swap(RequestVoteResp* other);
  friend void swap(RequestVoteResp& a, RequestVoteResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestVoteResp* New() const final {
    return CreateMaybeMessage<RequestVoteResp>(NULL);
  }

  RequestVoteResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestVoteResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestVoteResp& from);
  void MergeFrom(const RequestVoteResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestVoteResp* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 request_term = 2;
  void                      clear_request_term();
  static const int          kRequestTermFieldNumber = 2;
  ::google::protobuf::int64 request_term() const;
  void                      set_request_term(::google::protobuf::int64 value);

  // int64 term = 3;
  void                      clear_term();
  static const int          kTermFieldNumber = 3;
  ::google::protobuf::int64 term() const;
  void                      set_term(::google::protobuf::int64 value);

  // bool prevote = 1;
  void             clear_prevote();
  static const int kPrevoteFieldNumber = 1;
  bool             prevote() const;
  void             set_prevote(bool value);

  // bool vote_granted = 4;
  void             clear_vote_granted();
  static const int kVoteGrantedFieldNumber = 4;
  bool             vote_granted() const;
  void             set_vote_granted(bool value);

  // @@protoc_insertion_point(class_scope:eraftkv.RequestVoteResp)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64                               request_term_;
  ::google::protobuf::int64                               term_;
  bool                                                    prevote_;
  bool                                                    vote_granted_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.Entry)
                                                  */
{
 public:
  Entry();
  virtual ~Entry();

  Entry(const Entry& from);

  inline Entry& operator=(const Entry& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  Entry(Entry&& from) noexcept : Entry() {
    *this = ::std::move(from);
  }

  inline Entry& operator=(Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Entry&                          default_instance();

  static void                InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Entry* internal_default_instance() {
    return reinterpret_cast<const Entry*>(&_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;

  void        Swap(Entry* other);
  friend void swap(Entry& a, Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Entry* New() const final {
    return CreateMaybeMessage<Entry>(NULL);
  }

  Entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Entry& from);
  void MergeFrom(const Entry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Entry* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 5;
  void                 clear_data();
  static const int     kDataFieldNumber = 5;
  const ::std::string& data() const;
  void                 set_data(const ::std::string& value);
#if LANG_CXX11
  void set_data(::std::string&& value);
#endif
  void           set_data(const char* value);
  void           set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void           set_allocated_data(::std::string* data);

  // int64 term = 1;
  void                      clear_term();
  static const int          kTermFieldNumber = 1;
  ::google::protobuf::int64 term() const;
  void                      set_term(::google::protobuf::int64 value);

  // int64 id = 2;
  void                      clear_id();
  static const int          kIdFieldNumber = 2;
  ::google::protobuf::int64 id() const;
  void                      set_id(::google::protobuf::int64 value);

  // int64 data_size = 4;
  void                      clear_data_size();
  static const int          kDataSizeFieldNumber = 4;
  ::google::protobuf::int64 data_size() const;
  void                      set_data_size(::google::protobuf::int64 value);

  // .eraftkv.EntryType e_type = 3;
  void                 clear_e_type();
  static const int     kETypeFieldNumber = 3;
  ::eraftkv::EntryType e_type() const;
  void                 set_e_type(::eraftkv::EntryType value);

  // @@protoc_insertion_point(class_scope:eraftkv.Entry)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr            data_;
  ::google::protobuf::int64                               term_;
  ::google::protobuf::int64                               id_;
  ::google::protobuf::int64                               data_size_;
  int                                                     e_type_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppendEntriesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.AppendEntriesReq)
                                                             */
{
 public:
  AppendEntriesReq();
  virtual ~AppendEntriesReq();

  AppendEntriesReq(const AppendEntriesReq& from);

  inline AppendEntriesReq& operator=(const AppendEntriesReq& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  AppendEntriesReq(AppendEntriesReq&& from) noexcept : AppendEntriesReq() {
    *this = ::std::move(from);
  }

  inline AppendEntriesReq& operator=(AppendEntriesReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesReq&               default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppendEntriesReq* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesReq*>(
        &_AppendEntriesReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;

  void        Swap(AppendEntriesReq* other);
  friend void swap(AppendEntriesReq& a, AppendEntriesReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppendEntriesReq* New() const final {
    return CreateMaybeMessage<AppendEntriesReq>(NULL);
  }

  AppendEntriesReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppendEntriesReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppendEntriesReq& from);
  void MergeFrom(const AppendEntriesReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppendEntriesReq* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .eraftkv.Entry entries = 8;
  int               entries_size() const;
  void              clear_entries();
  static const int  kEntriesFieldNumber = 8;
  ::eraftkv::Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::eraftkv::Entry>* mutable_entries();
  const ::eraftkv::Entry& entries(int index) const;
  ::eraftkv::Entry*       add_entries();
  const ::google::protobuf::RepeatedPtrField<::eraftkv::Entry>& entries() const;

  // int64 leader_id = 1;
  void                      clear_leader_id();
  static const int          kLeaderIdFieldNumber = 1;
  ::google::protobuf::int64 leader_id() const;
  void                      set_leader_id(::google::protobuf::int64 value);

  // int64 message_index = 2;
  void                      clear_message_index();
  static const int          kMessageIndexFieldNumber = 2;
  ::google::protobuf::int64 message_index() const;
  void                      set_message_index(::google::protobuf::int64 value);

  // int64 term = 3;
  void                      clear_term();
  static const int          kTermFieldNumber = 3;
  ::google::protobuf::int64 term() const;
  void                      set_term(::google::protobuf::int64 value);

  // int64 prev_log_index = 4;
  void                      clear_prev_log_index();
  static const int          kPrevLogIndexFieldNumber = 4;
  ::google::protobuf::int64 prev_log_index() const;
  void                      set_prev_log_index(::google::protobuf::int64 value);

  // int64 prev_log_term = 5;
  void                      clear_prev_log_term();
  static const int          kPrevLogTermFieldNumber = 5;
  ::google::protobuf::int64 prev_log_term() const;
  void                      set_prev_log_term(::google::protobuf::int64 value);

  // int64 leader_commit = 6;
  void                      clear_leader_commit();
  static const int          kLeaderCommitFieldNumber = 6;
  ::google::protobuf::int64 leader_commit() const;
  void                      set_leader_commit(::google::protobuf::int64 value);

  // int64 entries_size = 7;
  void                      clear_entries_size();
  static const int          kEntriesSizeFieldNumber = 7;
  ::google::protobuf::int64 entries_size() const;
  void                      set_entries_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:eraftkv.AppendEntriesReq)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::eraftkv::Entry>  entries_;
  ::google::protobuf::int64                               leader_id_;
  ::google::protobuf::int64                               message_index_;
  ::google::protobuf::int64                               term_;
  ::google::protobuf::int64                               prev_log_index_;
  ::google::protobuf::int64                               prev_log_term_;
  ::google::protobuf::int64                               leader_commit_;
  ::google::protobuf::int64                               entries_size_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppendEntriesResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.AppendEntriesResp)
                                                              */
{
 public:
  AppendEntriesResp();
  virtual ~AppendEntriesResp();

  AppendEntriesResp(const AppendEntriesResp& from);

  inline AppendEntriesResp& operator=(const AppendEntriesResp& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  AppendEntriesResp(AppendEntriesResp&& from) noexcept : AppendEntriesResp() {
    *this = ::std::move(from);
  }

  inline AppendEntriesResp& operator=(AppendEntriesResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesResp&              default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppendEntriesResp* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesResp*>(
        &_AppendEntriesResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;

  void        Swap(AppendEntriesResp* other);
  friend void swap(AppendEntriesResp& a, AppendEntriesResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppendEntriesResp* New() const final {
    return CreateMaybeMessage<AppendEntriesResp>(NULL);
  }

  AppendEntriesResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppendEntriesResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppendEntriesResp& from);
  void MergeFrom(const AppendEntriesResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppendEntriesResp* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message_token = 1;
  void                 clear_message_token();
  static const int     kMessageTokenFieldNumber = 1;
  const ::std::string& message_token() const;
  void                 set_message_token(const ::std::string& value);
#if LANG_CXX11
  void set_message_token(::std::string&& value);
#endif
  void           set_message_token(const char* value);
  void           set_message_token(const char* value, size_t size);
  ::std::string* mutable_message_token();
  ::std::string* release_message_token();
  void           set_allocated_message_token(::std::string* message_token);

  // int64 term = 2;
  void                      clear_term();
  static const int          kTermFieldNumber = 2;
  ::google::protobuf::int64 term() const;
  void                      set_term(::google::protobuf::int64 value);

  // int64 current_index = 4;
  void                      clear_current_index();
  static const int          kCurrentIndexFieldNumber = 4;
  ::google::protobuf::int64 current_index() const;
  void                      set_current_index(::google::protobuf::int64 value);

  // bool success = 3;
  void             clear_success();
  static const int kSuccessFieldNumber = 3;
  bool             success() const;
  void             set_success(bool value);

  // @@protoc_insertion_point(class_scope:eraftkv.AppendEntriesResp)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr            message_token_;
  ::google::protobuf::int64                               term_;
  ::google::protobuf::int64                               current_index_;
  bool                                                    success_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnapshotBlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.SnapshotBlock)
                                                          */
{
 public:
  SnapshotBlock();
  virtual ~SnapshotBlock();

  SnapshotBlock(const SnapshotBlock& from);

  inline SnapshotBlock& operator=(const SnapshotBlock& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  SnapshotBlock(SnapshotBlock&& from) noexcept : SnapshotBlock() {
    *this = ::std::move(from);
  }

  inline SnapshotBlock& operator=(SnapshotBlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotBlock&                  default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SnapshotBlock* internal_default_instance() {
    return reinterpret_cast<const SnapshotBlock*>(
        &_SnapshotBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;

  void        Swap(SnapshotBlock* other);
  friend void swap(SnapshotBlock& a, SnapshotBlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnapshotBlock* New() const final {
    return CreateMaybeMessage<SnapshotBlock>(NULL);
  }

  SnapshotBlock* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SnapshotBlock>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SnapshotBlock& from);
  void MergeFrom(const SnapshotBlock& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SnapshotBlock* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 2;
  void                 clear_data();
  static const int     kDataFieldNumber = 2;
  const ::std::string& data() const;
  void                 set_data(const ::std::string& value);
#if LANG_CXX11
  void set_data(::std::string&& value);
#endif
  void           set_data(const char* value);
  void           set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void           set_allocated_data(::std::string* data);

  // int64 offset = 1;
  void                      clear_offset();
  static const int          kOffsetFieldNumber = 1;
  ::google::protobuf::int64 offset() const;
  void                      set_offset(::google::protobuf::int64 value);

  // int64 block_size = 3;
  void                      clear_block_size();
  static const int          kBlockSizeFieldNumber = 3;
  ::google::protobuf::int64 block_size() const;
  void                      set_block_size(::google::protobuf::int64 value);

  // bool is_last_chunk = 4;
  void             clear_is_last_chunk();
  static const int kIsLastChunkFieldNumber = 4;
  bool             is_last_chunk() const;
  void             set_is_last_chunk(bool value);

  // @@protoc_insertion_point(class_scope:eraftkv.SnapshotBlock)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr            data_;
  ::google::protobuf::int64                               offset_;
  ::google::protobuf::int64                               block_size_;
  bool                                                    is_last_chunk_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnapshotReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.SnapshotReq)
                                                        */
{
 public:
  SnapshotReq();
  virtual ~SnapshotReq();

  SnapshotReq(const SnapshotReq& from);

  inline SnapshotReq& operator=(const SnapshotReq& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  SnapshotReq(SnapshotReq&& from) noexcept : SnapshotReq() {
    *this = ::std::move(from);
  }

  inline SnapshotReq& operator=(SnapshotReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotReq&                    default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SnapshotReq* internal_default_instance() {
    return reinterpret_cast<const SnapshotReq*>(
        &_SnapshotReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;

  void        Swap(SnapshotReq* other);
  friend void swap(SnapshotReq& a, SnapshotReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnapshotReq* New() const final {
    return CreateMaybeMessage<SnapshotReq>(NULL);
  }

  SnapshotReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SnapshotReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SnapshotReq& from);
  void MergeFrom(const SnapshotReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SnapshotReq* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message_index = 3;
  void                 clear_message_index();
  static const int     kMessageIndexFieldNumber = 3;
  const ::std::string& message_index() const;
  void                 set_message_index(const ::std::string& value);
#if LANG_CXX11
  void set_message_index(::std::string&& value);
#endif
  void           set_message_index(const char* value);
  void           set_message_index(const char* value, size_t size);
  ::std::string* mutable_message_index();
  ::std::string* release_message_index();
  void           set_allocated_message_index(::std::string* message_index);

  // .eraftkv.SnapshotBlock block = 6;
  bool             has_block() const;
  void             clear_block();
  static const int kBlockFieldNumber = 6;

 private:
  const ::eraftkv::SnapshotBlock& _internal_block() const;

 public:
  const ::eraftkv::SnapshotBlock& block() const;
  ::eraftkv::SnapshotBlock*       release_block();
  ::eraftkv::SnapshotBlock*       mutable_block();
  void set_allocated_block(::eraftkv::SnapshotBlock* block);

  // int64 term = 1;
  void                      clear_term();
  static const int          kTermFieldNumber = 1;
  ::google::protobuf::int64 term() const;
  void                      set_term(::google::protobuf::int64 value);

  // int64 leader_id = 2;
  void                      clear_leader_id();
  static const int          kLeaderIdFieldNumber = 2;
  ::google::protobuf::int64 leader_id() const;
  void                      set_leader_id(::google::protobuf::int64 value);

  // int64 snapshot_index = 4;
  void                      clear_snapshot_index();
  static const int          kSnapshotIndexFieldNumber = 4;
  ::google::protobuf::int64 snapshot_index() const;
  void                      set_snapshot_index(::google::protobuf::int64 value);

  // int64 snapshot_term = 5;
  void                      clear_snapshot_term();
  static const int          kSnapshotTermFieldNumber = 5;
  ::google::protobuf::int64 snapshot_term() const;
  void                      set_snapshot_term(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:eraftkv.SnapshotReq)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr            message_index_;
  ::eraftkv::SnapshotBlock*                               block_;
  ::google::protobuf::int64                               term_;
  ::google::protobuf::int64                               leader_id_;
  ::google::protobuf::int64                               snapshot_index_;
  ::google::protobuf::int64                               snapshot_term_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnapshotResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.SnapshotResp)
                                                         */
{
 public:
  SnapshotResp();
  virtual ~SnapshotResp();

  SnapshotResp(const SnapshotResp& from);

  inline SnapshotResp& operator=(const SnapshotResp& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  SnapshotResp(SnapshotResp&& from) noexcept : SnapshotResp() {
    *this = ::std::move(from);
  }

  inline SnapshotResp& operator=(SnapshotResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotResp&                   default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SnapshotResp* internal_default_instance() {
    return reinterpret_cast<const SnapshotResp*>(
        &_SnapshotResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;

  void        Swap(SnapshotResp* other);
  friend void swap(SnapshotResp& a, SnapshotResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SnapshotResp* New() const final {
    return CreateMaybeMessage<SnapshotResp>(NULL);
  }

  SnapshotResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SnapshotResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SnapshotResp& from);
  void MergeFrom(const SnapshotResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SnapshotResp* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message_index = 2;
  void                 clear_message_index();
  static const int     kMessageIndexFieldNumber = 2;
  const ::std::string& message_index() const;
  void                 set_message_index(const ::std::string& value);
#if LANG_CXX11
  void set_message_index(::std::string&& value);
#endif
  void           set_message_index(const char* value);
  void           set_message_index(const char* value, size_t size);
  ::std::string* mutable_message_index();
  ::std::string* release_message_index();
  void           set_allocated_message_index(::std::string* message_index);

  // int64 term = 1;
  void                      clear_term();
  static const int          kTermFieldNumber = 1;
  ::google::protobuf::int64 term() const;
  void                      set_term(::google::protobuf::int64 value);

  // int64 offset = 3;
  void                      clear_offset();
  static const int          kOffsetFieldNumber = 3;
  ::google::protobuf::int64 offset() const;
  void                      set_offset(::google::protobuf::int64 value);

  // bool success = 4;
  void             clear_success();
  static const int kSuccessFieldNumber = 4;
  bool             success() const;
  void             set_success(bool value);

  // bool is_last_chunk = 5;
  void             clear_is_last_chunk();
  static const int kIsLastChunkFieldNumber = 5;
  bool             is_last_chunk() const;
  void             set_is_last_chunk(bool value);

  // @@protoc_insertion_point(class_scope:eraftkv.SnapshotResp)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr            message_index_;
  ::google::protobuf::int64                               term_;
  ::google::protobuf::int64                               offset_;
  bool                                                    success_;
  bool                                                    is_last_chunk_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.KeyRange)
                                                     */
{
 public:
  KeyRange();
  virtual ~KeyRange();

  KeyRange(const KeyRange& from);

  inline KeyRange& operator=(const KeyRange& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  KeyRange(KeyRange&& from) noexcept : KeyRange() {
    *this = ::std::move(from);
  }

  inline KeyRange& operator=(KeyRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyRange&                       default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyRange* internal_default_instance() {
    return reinterpret_cast<const KeyRange*>(&_KeyRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;

  void        Swap(KeyRange* other);
  friend void swap(KeyRange& a, KeyRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyRange* New() const final {
    return CreateMaybeMessage<KeyRange>(NULL);
  }

  KeyRange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KeyRange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KeyRange& from);
  void MergeFrom(const KeyRange& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyRange* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string start = 4;
  void                 clear_start();
  static const int     kStartFieldNumber = 4;
  const ::std::string& start() const;
  void                 set_start(const ::std::string& value);
#if LANG_CXX11
  void set_start(::std::string&& value);
#endif
  void           set_start(const char* value);
  void           set_start(const char* value, size_t size);
  ::std::string* mutable_start();
  ::std::string* release_start();
  void           set_allocated_start(::std::string* start);

  // string end = 5;
  void                 clear_end();
  static const int     kEndFieldNumber = 5;
  const ::std::string& end() const;
  void                 set_end(const ::std::string& value);
#if LANG_CXX11
  void set_end(::std::string&& value);
#endif
  void           set_end(const char* value);
  void           set_end(const char* value, size_t size);
  ::std::string* mutable_end();
  ::std::string* release_end();
  void           set_allocated_end(::std::string* end);

  // int64 shard_id = 2;
  void                      clear_shard_id();
  static const int          kShardIdFieldNumber = 2;
  ::google::protobuf::int64 shard_id() const;
  void                      set_shard_id(::google::protobuf::int64 value);

  // int64 status_modify_time = 3;
  void                      clear_status_modify_time();
  static const int          kStatusModifyTimeFieldNumber = 3;
  ::google::protobuf::int64 status_modify_time() const;
  void set_status_modify_time(::google::protobuf::int64 value);

  // .eraftkv.KeyRangeStatus key_range_status = 1;
  void                      clear_key_range_status();
  static const int          kKeyRangeStatusFieldNumber = 1;
  ::eraftkv::KeyRangeStatus key_range_status() const;
  void set_key_range_status(::eraftkv::KeyRangeStatus value);

  // @@protoc_insertion_point(class_scope:eraftkv.KeyRange)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr            start_;
  ::google::protobuf::internal::ArenaStringPtr            end_;
  ::google::protobuf::int64                               shard_id_;
  ::google::protobuf::int64                               status_modify_time_;
  int                                                     key_range_status_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.Server)
                                                   */
{
 public:
  Server();
  virtual ~Server();

  Server(const Server& from);

  inline Server& operator=(const Server& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  Server(Server&& from) noexcept : Server() {
    *this = ::std::move(from);
  }

  inline Server& operator=(Server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Server&                         default_instance();

  static void                 InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Server* internal_default_instance() {
    return reinterpret_cast<const Server*>(&_Server_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;

  void        Swap(Server* other);
  friend void swap(Server& a, Server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Server* New() const final {
    return CreateMaybeMessage<Server>(NULL);
  }

  Server* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Server>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Server& from);
  void MergeFrom(const Server& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Server* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void                 clear_id();
  static const int     kIdFieldNumber = 1;
  const ::std::string& id() const;
  void                 set_id(const ::std::string& value);
#if LANG_CXX11
  void set_id(::std::string&& value);
#endif
  void           set_id(const char* value);
  void           set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void           set_allocated_id(::std::string* id);

  // string address = 2;
  void                 clear_address();
  static const int     kAddressFieldNumber = 2;
  const ::std::string& address() const;
  void                 set_address(const ::std::string& value);
#if LANG_CXX11
  void set_address(::std::string&& value);
#endif
  void           set_address(const char* value);
  void           set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void           set_allocated_address(::std::string* address);

  // .eraftkv.ServerStatus server_status = 3;
  void                    clear_server_status();
  static const int        kServerStatusFieldNumber = 3;
  ::eraftkv::ServerStatus server_status() const;
  void                    set_server_status(::eraftkv::ServerStatus value);

  // @@protoc_insertion_point(class_scope:eraftkv.Server)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr            id_;
  ::google::protobuf::internal::ArenaStringPtr            address_;
  int                                                     server_status_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShardGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.ShardGroup)
                                                       */
{
 public:
  ShardGroup();
  virtual ~ShardGroup();

  ShardGroup(const ShardGroup& from);

  inline ShardGroup& operator=(const ShardGroup& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  ShardGroup(ShardGroup&& from) noexcept : ShardGroup() {
    *this = ::std::move(from);
  }

  inline ShardGroup& operator=(ShardGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShardGroup&                     default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShardGroup* internal_default_instance() {
    return reinterpret_cast<const ShardGroup*>(&_ShardGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;

  void        Swap(ShardGroup* other);
  friend void swap(ShardGroup& a, ShardGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShardGroup* New() const final {
    return CreateMaybeMessage<ShardGroup>(NULL);
  }

  ShardGroup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ShardGroup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ShardGroup& from);
  void MergeFrom(const ShardGroup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShardGroup* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .eraftkv.Server servers = 3;
  int                servers_size() const;
  void               clear_servers();
  static const int   kServersFieldNumber = 3;
  ::eraftkv::Server* mutable_servers(int index);
  ::google::protobuf::RepeatedPtrField<::eraftkv::Server>* mutable_servers();
  const ::eraftkv::Server& servers(int index) const;
  ::eraftkv::Server*       add_servers();
  const ::google::protobuf::RepeatedPtrField<::eraftkv::Server>& servers()
      const;

  // .eraftkv.KeyRange key_range = 2;
  bool             has_key_range() const;
  void             clear_key_range();
  static const int kKeyRangeFieldNumber = 2;

 private:
  const ::eraftkv::KeyRange& _internal_key_range() const;

 public:
  const ::eraftkv::KeyRange& key_range() const;
  ::eraftkv::KeyRange*       release_key_range();
  ::eraftkv::KeyRange*       mutable_key_range();
  void set_allocated_key_range(::eraftkv::KeyRange* key_range);

  // int64 id = 1;
  void                      clear_id();
  static const int          kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void                      set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:eraftkv.ShardGroup)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::eraftkv::Server> servers_;
  ::eraftkv::KeyRange*                                    key_range_;
  ::google::protobuf::int64                               id_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterConfigChangeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.ClusterConfigChangeReq)
                                                                   */
{
 public:
  ClusterConfigChangeReq();
  virtual ~ClusterConfigChangeReq();

  ClusterConfigChangeReq(const ClusterConfigChangeReq& from);

  inline ClusterConfigChangeReq& operator=(const ClusterConfigChangeReq& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  ClusterConfigChangeReq(ClusterConfigChangeReq&& from) noexcept
      : ClusterConfigChangeReq() {
    *this = ::std::move(from);
  }

  inline ClusterConfigChangeReq& operator=(
      ClusterConfigChangeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterConfigChangeReq&         default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClusterConfigChangeReq* internal_default_instance() {
    return reinterpret_cast<const ClusterConfigChangeReq*>(
        &_ClusterConfigChangeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;

  void        Swap(ClusterConfigChangeReq* other);
  friend void swap(ClusterConfigChangeReq& a, ClusterConfigChangeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterConfigChangeReq* New() const final {
    return CreateMaybeMessage<ClusterConfigChangeReq>(NULL);
  }

  ClusterConfigChangeReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClusterConfigChangeReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClusterConfigChangeReq& from);
  void MergeFrom(const ClusterConfigChangeReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClusterConfigChangeReq* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .eraftkv.Server server = 3;
  bool             has_server() const;
  void             clear_server();
  static const int kServerFieldNumber = 3;

 private:
  const ::eraftkv::Server& _internal_server() const;

 public:
  const ::eraftkv::Server& server() const;
  ::eraftkv::Server*       release_server();
  ::eraftkv::Server*       mutable_server();
  void                     set_allocated_server(::eraftkv::Server* server);

  // int64 shard_id = 2;
  void                      clear_shard_id();
  static const int          kShardIdFieldNumber = 2;
  ::google::protobuf::int64 shard_id() const;
  void                      set_shard_id(::google::protobuf::int64 value);

  // int64 config_version = 4;
  void                      clear_config_version();
  static const int          kConfigVersionFieldNumber = 4;
  ::google::protobuf::int64 config_version() const;
  void                      set_config_version(::google::protobuf::int64 value);

  // .eraftkv.ClusterConfigChangeType change_type = 1;
  void                               clear_change_type();
  static const int                   kChangeTypeFieldNumber = 1;
  ::eraftkv::ClusterConfigChangeType change_type() const;
  void set_change_type(::eraftkv::ClusterConfigChangeType value);

  // @@protoc_insertion_point(class_scope:eraftkv.ClusterConfigChangeReq)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::eraftkv::Server*                                      server_;
  ::google::protobuf::int64                               shard_id_;
  ::google::protobuf::int64                               config_version_;
  int                                                     change_type_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterConfigChangeResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.ClusterConfigChangeResp)
                                                                    */
{
 public:
  ClusterConfigChangeResp();
  virtual ~ClusterConfigChangeResp();

  ClusterConfigChangeResp(const ClusterConfigChangeResp& from);

  inline ClusterConfigChangeResp& operator=(
      const ClusterConfigChangeResp& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  ClusterConfigChangeResp(ClusterConfigChangeResp&& from) noexcept
      : ClusterConfigChangeResp() {
    *this = ::std::move(from);
  }

  inline ClusterConfigChangeResp& operator=(
      ClusterConfigChangeResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterConfigChangeResp&        default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClusterConfigChangeResp* internal_default_instance() {
    return reinterpret_cast<const ClusterConfigChangeResp*>(
        &_ClusterConfigChangeResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;

  void        Swap(ClusterConfigChangeResp* other);
  friend void swap(ClusterConfigChangeResp& a, ClusterConfigChangeResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClusterConfigChangeResp* New() const final {
    return CreateMaybeMessage<ClusterConfigChangeResp>(NULL);
  }

  ClusterConfigChangeResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClusterConfigChangeResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClusterConfigChangeResp& from);
  void MergeFrom(const ClusterConfigChangeResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClusterConfigChangeResp* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .eraftkv.ShardGroup shard_group = 2;
  int                    shard_group_size() const;
  void                   clear_shard_group();
  static const int       kShardGroupFieldNumber = 2;
  ::eraftkv::ShardGroup* mutable_shard_group(int index);
  ::google::protobuf::RepeatedPtrField<::eraftkv::ShardGroup>*
                               mutable_shard_group();
  const ::eraftkv::ShardGroup& shard_group(int index) const;
  ::eraftkv::ShardGroup*       add_shard_group();
  const ::google::protobuf::RepeatedPtrField<::eraftkv::ShardGroup>&
      shard_group() const;

  // int64 config_version = 3;
  void                      clear_config_version();
  static const int          kConfigVersionFieldNumber = 3;
  ::google::protobuf::int64 config_version() const;
  void                      set_config_version(::google::protobuf::int64 value);

  // bool success = 1;
  void             clear_success();
  static const int kSuccessFieldNumber = 1;
  bool             success() const;
  void             set_success(bool value);

  // @@protoc_insertion_point(class_scope:eraftkv.ClusterConfigChangeResp)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::eraftkv::ShardGroup> shard_group_;
  ::google::protobuf::int64                                   config_version_;
  bool                                                        success_;
  mutable ::google::protobuf::internal::CachedSize            _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KvOpPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.KvOpPair)
                                                     */
{
 public:
  KvOpPair();
  virtual ~KvOpPair();

  KvOpPair(const KvOpPair& from);

  inline KvOpPair& operator=(const KvOpPair& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  KvOpPair(KvOpPair&& from) noexcept : KvOpPair() {
    *this = ::std::move(from);
  }

  inline KvOpPair& operator=(KvOpPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvOpPair&                       default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KvOpPair* internal_default_instance() {
    return reinterpret_cast<const KvOpPair*>(&_KvOpPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;

  void        Swap(KvOpPair* other);
  friend void swap(KvOpPair& a, KvOpPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvOpPair* New() const final {
    return CreateMaybeMessage<KvOpPair>(NULL);
  }

  KvOpPair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KvOpPair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KvOpPair& from);
  void MergeFrom(const KvOpPair& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KvOpPair* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 2;
  void                 clear_key();
  static const int     kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void                 set_key(const ::std::string& value);
#if LANG_CXX11
  void set_key(::std::string&& value);
#endif
  void           set_key(const char* value);
  void           set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void           set_allocated_key(::std::string* key);

  // string value = 3;
  void                 clear_value();
  static const int     kValueFieldNumber = 3;
  const ::std::string& value() const;
  void                 set_value(const ::std::string& value);
#if LANG_CXX11
  void set_value(::std::string&& value);
#endif
  void           set_value(const char* value);
  void           set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void           set_allocated_value(::std::string* value);

  // uint64 cursor = 4;
  void                       clear_cursor();
  static const int           kCursorFieldNumber = 4;
  ::google::protobuf::uint64 cursor() const;
  void                       set_cursor(::google::protobuf::uint64 value);

  // .eraftkv.ClientOpType op_type = 1;
  void                    clear_op_type();
  static const int        kOpTypeFieldNumber = 1;
  ::eraftkv::ClientOpType op_type() const;
  void                    set_op_type(::eraftkv::ClientOpType value);

  // @@protoc_insertion_point(class_scope:eraftkv.KvOpPair)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr            key_;
  ::google::protobuf::internal::ArenaStringPtr            value_;
  ::google::protobuf::uint64                              cursor_;
  int                                                     op_type_;
  mutable ::google::protobuf::internal::CachedSize        _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientOperationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.ClientOperationReq)
                                                               */
{
 public:
  ClientOperationReq();
  virtual ~ClientOperationReq();

  ClientOperationReq(const ClientOperationReq& from);

  inline ClientOperationReq& operator=(const ClientOperationReq& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  ClientOperationReq(ClientOperationReq&& from) noexcept
      : ClientOperationReq() {
    *this = ::std::move(from);
  }

  inline ClientOperationReq& operator=(ClientOperationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientOperationReq&             default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientOperationReq* internal_default_instance() {
    return reinterpret_cast<const ClientOperationReq*>(
        &_ClientOperationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;

  void        Swap(ClientOperationReq* other);
  friend void swap(ClientOperationReq& a, ClientOperationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientOperationReq* New() const final {
    return CreateMaybeMessage<ClientOperationReq>(NULL);
  }

  ClientOperationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientOperationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClientOperationReq& from);
  void MergeFrom(const ClientOperationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientOperationReq* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .eraftkv.KvOpPair kvs = 2;
  int                  kvs_size() const;
  void                 clear_kvs();
  static const int     kKvsFieldNumber = 2;
  ::eraftkv::KvOpPair* mutable_kvs(int index);
  ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair>* mutable_kvs();
  const ::eraftkv::KvOpPair& kvs(int index) const;
  ::eraftkv::KvOpPair*       add_kvs();
  const ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair>& kvs() const;

  // uint64 op_timestamp = 1;
  void                       clear_op_timestamp();
  static const int           kOpTimestampFieldNumber = 1;
  ::google::protobuf::uint64 op_timestamp() const;
  void                       set_op_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:eraftkv.ClientOperationReq)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena   _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair> kvs_;
  ::google::protobuf::uint64                                op_timestamp_;
  mutable ::google::protobuf::internal::CachedSize          _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientOperationResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftkv.ClientOperationResp)
                                                                */
{
 public:
  ClientOperationResp();
  virtual ~ClientOperationResp();

  ClientOperationResp(const ClientOperationResp& from);

  inline ClientOperationResp& operator=(const ClientOperationResp& from) {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  ClientOperationResp(ClientOperationResp&& from) noexcept
      : ClientOperationResp() {
    *this = ::std::move(from);
  }

  inline ClientOperationResp& operator=(ClientOperationResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientOperationResp&            default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientOperationResp* internal_default_instance() {
    return reinterpret_cast<const ClientOperationResp*>(
        &_ClientOperationResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;

  void        Swap(ClientOperationResp* other);
  friend void swap(ClientOperationResp& a, ClientOperationResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientOperationResp* New() const final {
    return CreateMaybeMessage<ClientOperationResp>(NULL);
  }

  ClientOperationResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientOperationResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClientOperationResp& from);
  void MergeFrom(const ClientOperationResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool   MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool                       deterministic,
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final {
    return _cached_size_.Get();
  }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientOperationResp* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .eraftkv.KvOpPair ops = 2;
  int                  ops_size() const;
  void                 clear_ops();
  static const int     kOpsFieldNumber = 2;
  ::eraftkv::KvOpPair* mutable_ops(int index);
  ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair>* mutable_ops();
  const ::eraftkv::KvOpPair& ops(int index) const;
  ::eraftkv::KvOpPair*       add_ops();
  const ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair>& ops() const;

  // bool success = 1;
  void             clear_success();
  static const int kSuccessFieldNumber = 1;
  bool             success() const;
  void             set_success(bool value);

  // @@protoc_insertion_point(class_scope:eraftkv.ClientOperationResp)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena   _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair> ops_;
  bool                                                      success_;
  mutable ::google::protobuf::internal::CachedSize          _cached_size_;
  friend struct ::protobuf_eraftkv_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RequestVoteReq

// bool prevote = 1;
inline void RequestVoteReq::clear_prevote() {
  prevote_ = false;
}
inline bool RequestVoteReq::prevote() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteReq.prevote)
  return prevote_;
}
inline void RequestVoteReq::set_prevote(bool value) {

  prevote_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteReq.prevote)
}

// int64 term = 2;
inline void RequestVoteReq::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestVoteReq::term() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteReq.term)
  return term_;
}
inline void RequestVoteReq::set_term(::google::protobuf::int64 value) {

  term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteReq.term)
}

// int64 candidtate_id = 3;
inline void RequestVoteReq::clear_candidtate_id() {
  candidtate_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestVoteReq::candidtate_id() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteReq.candidtate_id)
  return candidtate_id_;
}
inline void RequestVoteReq::set_candidtate_id(::google::protobuf::int64 value) {

  candidtate_id_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteReq.candidtate_id)
}

// int64 last_log_idx = 4;
inline void RequestVoteReq::clear_last_log_idx() {
  last_log_idx_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestVoteReq::last_log_idx() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteReq.last_log_idx)
  return last_log_idx_;
}
inline void RequestVoteReq::set_last_log_idx(::google::protobuf::int64 value) {

  last_log_idx_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteReq.last_log_idx)
}

// int64 last_log_term = 5;
inline void RequestVoteReq::clear_last_log_term() {
  last_log_term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestVoteReq::last_log_term() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteReq.last_log_term)
  return last_log_term_;
}
inline void RequestVoteReq::set_last_log_term(::google::protobuf::int64 value) {

  last_log_term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteReq.last_log_term)
}

// -------------------------------------------------------------------

// RequestVoteResp

// bool prevote = 1;
inline void RequestVoteResp::clear_prevote() {
  prevote_ = false;
}
inline bool RequestVoteResp::prevote() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteResp.prevote)
  return prevote_;
}
inline void RequestVoteResp::set_prevote(bool value) {

  prevote_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteResp.prevote)
}

// int64 request_term = 2;
inline void RequestVoteResp::clear_request_term() {
  request_term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestVoteResp::request_term() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteResp.request_term)
  return request_term_;
}
inline void RequestVoteResp::set_request_term(::google::protobuf::int64 value) {

  request_term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteResp.request_term)
}

// int64 term = 3;
inline void RequestVoteResp::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestVoteResp::term() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteResp.term)
  return term_;
}
inline void RequestVoteResp::set_term(::google::protobuf::int64 value) {

  term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteResp.term)
}

// bool vote_granted = 4;
inline void RequestVoteResp::clear_vote_granted() {
  vote_granted_ = false;
}
inline bool RequestVoteResp::vote_granted() const {
  // @@protoc_insertion_point(field_get:eraftkv.RequestVoteResp.vote_granted)
  return vote_granted_;
}
inline void RequestVoteResp::set_vote_granted(bool value) {

  vote_granted_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.RequestVoteResp.vote_granted)
}

// -------------------------------------------------------------------

// Entry

// int64 term = 1;
inline void Entry::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Entry::term() const {
  // @@protoc_insertion_point(field_get:eraftkv.Entry.term)
  return term_;
}
inline void Entry::set_term(::google::protobuf::int64 value) {

  term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.Entry.term)
}

// int64 id = 2;
inline void Entry::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Entry::id() const {
  // @@protoc_insertion_point(field_get:eraftkv.Entry.id)
  return id_;
}
inline void Entry::set_id(::google::protobuf::int64 value) {

  id_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.Entry.id)
}

// .eraftkv.EntryType e_type = 3;
inline void Entry::clear_e_type() {
  e_type_ = 0;
}
inline ::eraftkv::EntryType Entry::e_type() const {
  // @@protoc_insertion_point(field_get:eraftkv.Entry.e_type)
  return static_cast<::eraftkv::EntryType>(e_type_);
}
inline void Entry::set_e_type(::eraftkv::EntryType value) {

  e_type_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.Entry.e_type)
}

// int64 data_size = 4;
inline void Entry::clear_data_size() {
  data_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Entry::data_size() const {
  // @@protoc_insertion_point(field_get:eraftkv.Entry.data_size)
  return data_size_;
}
inline void Entry::set_data_size(::google::protobuf::int64 value) {

  data_size_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.Entry.data_size)
}

// bytes data = 5;
inline void Entry::clear_data() {
  data_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entry::data() const {
  // @@protoc_insertion_point(field_get:eraftkv.Entry.data)
  return data_.GetNoArena();
}
inline void Entry::set_data(const ::std::string& value) {

  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:eraftkv.Entry.data)
}
#if LANG_CXX11
inline void Entry::set_data(::std::string&& value) {

  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.Entry.data)
}
#endif
inline void Entry::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.Entry.data)
}
inline void Entry::set_data(const void* value, size_t size) {

  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.Entry.data)
}
inline ::std::string* Entry::mutable_data() {

  // @@protoc_insertion_point(field_mutable:eraftkv.Entry.data)
  return data_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entry::release_data() {
  // @@protoc_insertion_point(field_release:eraftkv.Entry.data)

  return data_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entry::set_allocated_data(::std::string* data) {
  if (data != NULL) {

  } else {
  }
  data_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.Entry.data)
}

// -------------------------------------------------------------------

// AppendEntriesReq

// int64 leader_id = 1;
inline void AppendEntriesReq::clear_leader_id() {
  leader_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesReq::leader_id() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesReq.leader_id)
  return leader_id_;
}
inline void AppendEntriesReq::set_leader_id(::google::protobuf::int64 value) {

  leader_id_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesReq.leader_id)
}

// int64 message_index = 2;
inline void AppendEntriesReq::clear_message_index() {
  message_index_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesReq::message_index() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesReq.message_index)
  return message_index_;
}
inline void AppendEntriesReq::set_message_index(
    ::google::protobuf::int64 value) {

  message_index_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesReq.message_index)
}

// int64 term = 3;
inline void AppendEntriesReq::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesReq::term() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesReq.term)
  return term_;
}
inline void AppendEntriesReq::set_term(::google::protobuf::int64 value) {

  term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesReq.term)
}

// int64 prev_log_index = 4;
inline void AppendEntriesReq::clear_prev_log_index() {
  prev_log_index_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesReq::prev_log_index() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesReq.prev_log_index)
  return prev_log_index_;
}
inline void AppendEntriesReq::set_prev_log_index(
    ::google::protobuf::int64 value) {

  prev_log_index_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesReq.prev_log_index)
}

// int64 prev_log_term = 5;
inline void AppendEntriesReq::clear_prev_log_term() {
  prev_log_term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesReq::prev_log_term() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesReq.prev_log_term)
  return prev_log_term_;
}
inline void AppendEntriesReq::set_prev_log_term(
    ::google::protobuf::int64 value) {

  prev_log_term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesReq.prev_log_term)
}

// int64 leader_commit = 6;
inline void AppendEntriesReq::clear_leader_commit() {
  leader_commit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesReq::leader_commit() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesReq.leader_commit)
  return leader_commit_;
}
inline void AppendEntriesReq::set_leader_commit(
    ::google::protobuf::int64 value) {

  leader_commit_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesReq.leader_commit)
}

// int64 entries_size = 7;
inline void AppendEntriesReq::clear_entries_size() {
  entries_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesReq::entries_size() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesReq.entries_size)
  return entries_size_;
}
inline void AppendEntriesReq::set_entries_size(
    ::google::protobuf::int64 value) {

  entries_size_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesReq.entries_size)
}

// repeated .eraftkv.Entry entries = 8;
inline int AppendEntriesReq::entries_size() const {
  return entries_.size();
}
inline void AppendEntriesReq::clear_entries() {
  entries_.Clear();
}
inline ::eraftkv::Entry* AppendEntriesReq::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:eraftkv.AppendEntriesReq.entries)
  return entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::eraftkv::Entry>*
    AppendEntriesReq::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:eraftkv.AppendEntriesReq.entries)
  return &entries_;
}
inline const ::eraftkv::Entry& AppendEntriesReq::entries(int index) const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesReq.entries)
  return entries_.Get(index);
}
inline ::eraftkv::Entry* AppendEntriesReq::add_entries() {
  // @@protoc_insertion_point(field_add:eraftkv.AppendEntriesReq.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField<::eraftkv::Entry>&
    AppendEntriesReq::entries() const {
  // @@protoc_insertion_point(field_list:eraftkv.AppendEntriesReq.entries)
  return entries_;
}

// -------------------------------------------------------------------

// AppendEntriesResp

// string message_token = 1;
inline void AppendEntriesResp::clear_message_token() {
  message_token_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppendEntriesResp::message_token() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesResp.message_token)
  return message_token_.GetNoArena();
}
inline void AppendEntriesResp::set_message_token(const ::std::string& value) {

  message_token_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesResp.message_token)
}
#if LANG_CXX11
inline void AppendEntriesResp::set_message_token(::std::string&& value) {

  message_token_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.AppendEntriesResp.message_token)
}
#endif
inline void AppendEntriesResp::set_message_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  message_token_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.AppendEntriesResp.message_token)
}
inline void AppendEntriesResp::set_message_token(const char* value,
                                                 size_t      size) {

  message_token_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.AppendEntriesResp.message_token)
}
inline ::std::string* AppendEntriesResp::mutable_message_token() {

  // @@protoc_insertion_point(field_mutable:eraftkv.AppendEntriesResp.message_token)
  return message_token_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppendEntriesResp::release_message_token() {
  // @@protoc_insertion_point(field_release:eraftkv.AppendEntriesResp.message_token)

  return message_token_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppendEntriesResp::set_allocated_message_token(
    ::std::string* message_token) {
  if (message_token != NULL) {

  } else {
  }
  message_token_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message_token);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.AppendEntriesResp.message_token)
}

// int64 term = 2;
inline void AppendEntriesResp::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesResp::term() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesResp.term)
  return term_;
}
inline void AppendEntriesResp::set_term(::google::protobuf::int64 value) {

  term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesResp.term)
}

// bool success = 3;
inline void AppendEntriesResp::clear_success() {
  success_ = false;
}
inline bool AppendEntriesResp::success() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesResp.success)
  return success_;
}
inline void AppendEntriesResp::set_success(bool value) {

  success_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesResp.success)
}

// int64 current_index = 4;
inline void AppendEntriesResp::clear_current_index() {
  current_index_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AppendEntriesResp::current_index() const {
  // @@protoc_insertion_point(field_get:eraftkv.AppendEntriesResp.current_index)
  return current_index_;
}
inline void AppendEntriesResp::set_current_index(
    ::google::protobuf::int64 value) {

  current_index_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.AppendEntriesResp.current_index)
}

// -------------------------------------------------------------------

// SnapshotBlock

// int64 offset = 1;
inline void SnapshotBlock::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SnapshotBlock::offset() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotBlock.offset)
  return offset_;
}
inline void SnapshotBlock::set_offset(::google::protobuf::int64 value) {

  offset_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotBlock.offset)
}

// bytes data = 2;
inline void SnapshotBlock::clear_data() {
  data_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SnapshotBlock::data() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotBlock.data)
  return data_.GetNoArena();
}
inline void SnapshotBlock::set_data(const ::std::string& value) {

  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotBlock.data)
}
#if LANG_CXX11
inline void SnapshotBlock::set_data(::std::string&& value) {

  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.SnapshotBlock.data)
}
#endif
inline void SnapshotBlock::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.SnapshotBlock.data)
}
inline void SnapshotBlock::set_data(const void* value, size_t size) {

  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.SnapshotBlock.data)
}
inline ::std::string* SnapshotBlock::mutable_data() {

  // @@protoc_insertion_point(field_mutable:eraftkv.SnapshotBlock.data)
  return data_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnapshotBlock::release_data() {
  // @@protoc_insertion_point(field_release:eraftkv.SnapshotBlock.data)

  return data_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotBlock::set_allocated_data(::std::string* data) {
  if (data != NULL) {

  } else {
  }
  data_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.SnapshotBlock.data)
}

// int64 block_size = 3;
inline void SnapshotBlock::clear_block_size() {
  block_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SnapshotBlock::block_size() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotBlock.block_size)
  return block_size_;
}
inline void SnapshotBlock::set_block_size(::google::protobuf::int64 value) {

  block_size_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotBlock.block_size)
}

// bool is_last_chunk = 4;
inline void SnapshotBlock::clear_is_last_chunk() {
  is_last_chunk_ = false;
}
inline bool SnapshotBlock::is_last_chunk() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotBlock.is_last_chunk)
  return is_last_chunk_;
}
inline void SnapshotBlock::set_is_last_chunk(bool value) {

  is_last_chunk_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotBlock.is_last_chunk)
}

// -------------------------------------------------------------------

// SnapshotReq

// int64 term = 1;
inline void SnapshotReq::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SnapshotReq::term() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotReq.term)
  return term_;
}
inline void SnapshotReq::set_term(::google::protobuf::int64 value) {

  term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotReq.term)
}

// int64 leader_id = 2;
inline void SnapshotReq::clear_leader_id() {
  leader_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SnapshotReq::leader_id() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotReq.leader_id)
  return leader_id_;
}
inline void SnapshotReq::set_leader_id(::google::protobuf::int64 value) {

  leader_id_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotReq.leader_id)
}

// string message_index = 3;
inline void SnapshotReq::clear_message_index() {
  message_index_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SnapshotReq::message_index() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotReq.message_index)
  return message_index_.GetNoArena();
}
inline void SnapshotReq::set_message_index(const ::std::string& value) {

  message_index_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotReq.message_index)
}
#if LANG_CXX11
inline void SnapshotReq::set_message_index(::std::string&& value) {

  message_index_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.SnapshotReq.message_index)
}
#endif
inline void SnapshotReq::set_message_index(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  message_index_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.SnapshotReq.message_index)
}
inline void SnapshotReq::set_message_index(const char* value, size_t size) {

  message_index_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.SnapshotReq.message_index)
}
inline ::std::string* SnapshotReq::mutable_message_index() {

  // @@protoc_insertion_point(field_mutable:eraftkv.SnapshotReq.message_index)
  return message_index_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnapshotReq::release_message_index() {
  // @@protoc_insertion_point(field_release:eraftkv.SnapshotReq.message_index)

  return message_index_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotReq::set_allocated_message_index(
    ::std::string* message_index) {
  if (message_index != NULL) {

  } else {
  }
  message_index_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message_index);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.SnapshotReq.message_index)
}

// int64 snapshot_index = 4;
inline void SnapshotReq::clear_snapshot_index() {
  snapshot_index_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SnapshotReq::snapshot_index() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotReq.snapshot_index)
  return snapshot_index_;
}
inline void SnapshotReq::set_snapshot_index(::google::protobuf::int64 value) {

  snapshot_index_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotReq.snapshot_index)
}

// int64 snapshot_term = 5;
inline void SnapshotReq::clear_snapshot_term() {
  snapshot_term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SnapshotReq::snapshot_term() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotReq.snapshot_term)
  return snapshot_term_;
}
inline void SnapshotReq::set_snapshot_term(::google::protobuf::int64 value) {

  snapshot_term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotReq.snapshot_term)
}

// .eraftkv.SnapshotBlock block = 6;
inline bool SnapshotReq::has_block() const {
  return this != internal_default_instance() && block_ != NULL;
}
inline void SnapshotReq::clear_block() {
  if (GetArenaNoVirtual() == NULL && block_ != NULL) {
    delete block_;
  }
  block_ = NULL;
}
inline const ::eraftkv::SnapshotBlock& SnapshotReq::_internal_block() const {
  return *block_;
}
inline const ::eraftkv::SnapshotBlock& SnapshotReq::block() const {
  const ::eraftkv::SnapshotBlock* p = block_;
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotReq.block)
  return p != NULL ? *p
                   : *reinterpret_cast<const ::eraftkv::SnapshotBlock*>(
                         &::eraftkv::_SnapshotBlock_default_instance_);
}
inline ::eraftkv::SnapshotBlock* SnapshotReq::release_block() {
  // @@protoc_insertion_point(field_release:eraftkv.SnapshotReq.block)

  ::eraftkv::SnapshotBlock* temp = block_;
  block_ = NULL;
  return temp;
}
inline ::eraftkv::SnapshotBlock* SnapshotReq::mutable_block() {

  if (block_ == NULL) {
    auto* p = CreateMaybeMessage<::eraftkv::SnapshotBlock>(GetArenaNoVirtual());
    block_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eraftkv.SnapshotReq.block)
  return block_;
}
inline void SnapshotReq::set_allocated_block(::eraftkv::SnapshotBlock* block) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete block_;
  }
  if (block) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      block = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, block, submessage_arena);
    }

  } else {
  }
  block_ = block;
  // @@protoc_insertion_point(field_set_allocated:eraftkv.SnapshotReq.block)
}

// -------------------------------------------------------------------

// SnapshotResp

// int64 term = 1;
inline void SnapshotResp::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SnapshotResp::term() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotResp.term)
  return term_;
}
inline void SnapshotResp::set_term(::google::protobuf::int64 value) {

  term_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotResp.term)
}

// string message_index = 2;
inline void SnapshotResp::clear_message_index() {
  message_index_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SnapshotResp::message_index() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotResp.message_index)
  return message_index_.GetNoArena();
}
inline void SnapshotResp::set_message_index(const ::std::string& value) {

  message_index_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotResp.message_index)
}
#if LANG_CXX11
inline void SnapshotResp::set_message_index(::std::string&& value) {

  message_index_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.SnapshotResp.message_index)
}
#endif
inline void SnapshotResp::set_message_index(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  message_index_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.SnapshotResp.message_index)
}
inline void SnapshotResp::set_message_index(const char* value, size_t size) {

  message_index_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.SnapshotResp.message_index)
}
inline ::std::string* SnapshotResp::mutable_message_index() {

  // @@protoc_insertion_point(field_mutable:eraftkv.SnapshotResp.message_index)
  return message_index_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnapshotResp::release_message_index() {
  // @@protoc_insertion_point(field_release:eraftkv.SnapshotResp.message_index)

  return message_index_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotResp::set_allocated_message_index(
    ::std::string* message_index) {
  if (message_index != NULL) {

  } else {
  }
  message_index_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message_index);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.SnapshotResp.message_index)
}

// int64 offset = 3;
inline void SnapshotResp::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SnapshotResp::offset() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotResp.offset)
  return offset_;
}
inline void SnapshotResp::set_offset(::google::protobuf::int64 value) {

  offset_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotResp.offset)
}

// bool success = 4;
inline void SnapshotResp::clear_success() {
  success_ = false;
}
inline bool SnapshotResp::success() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotResp.success)
  return success_;
}
inline void SnapshotResp::set_success(bool value) {

  success_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotResp.success)
}

// bool is_last_chunk = 5;
inline void SnapshotResp::clear_is_last_chunk() {
  is_last_chunk_ = false;
}
inline bool SnapshotResp::is_last_chunk() const {
  // @@protoc_insertion_point(field_get:eraftkv.SnapshotResp.is_last_chunk)
  return is_last_chunk_;
}
inline void SnapshotResp::set_is_last_chunk(bool value) {

  is_last_chunk_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.SnapshotResp.is_last_chunk)
}

// -------------------------------------------------------------------

// KeyRange

// .eraftkv.KeyRangeStatus key_range_status = 1;
inline void KeyRange::clear_key_range_status() {
  key_range_status_ = 0;
}
inline ::eraftkv::KeyRangeStatus KeyRange::key_range_status() const {
  // @@protoc_insertion_point(field_get:eraftkv.KeyRange.key_range_status)
  return static_cast<::eraftkv::KeyRangeStatus>(key_range_status_);
}
inline void KeyRange::set_key_range_status(::eraftkv::KeyRangeStatus value) {

  key_range_status_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.KeyRange.key_range_status)
}

// int64 shard_id = 2;
inline void KeyRange::clear_shard_id() {
  shard_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 KeyRange::shard_id() const {
  // @@protoc_insertion_point(field_get:eraftkv.KeyRange.shard_id)
  return shard_id_;
}
inline void KeyRange::set_shard_id(::google::protobuf::int64 value) {

  shard_id_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.KeyRange.shard_id)
}

// int64 status_modify_time = 3;
inline void KeyRange::clear_status_modify_time() {
  status_modify_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 KeyRange::status_modify_time() const {
  // @@protoc_insertion_point(field_get:eraftkv.KeyRange.status_modify_time)
  return status_modify_time_;
}
inline void KeyRange::set_status_modify_time(::google::protobuf::int64 value) {

  status_modify_time_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.KeyRange.status_modify_time)
}

// string start = 4;
inline void KeyRange::clear_start() {
  start_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeyRange::start() const {
  // @@protoc_insertion_point(field_get:eraftkv.KeyRange.start)
  return start_.GetNoArena();
}
inline void KeyRange::set_start(const ::std::string& value) {

  start_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftkv.KeyRange.start)
}
#if LANG_CXX11
inline void KeyRange::set_start(::std::string&& value) {

  start_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.KeyRange.start)
}
#endif
inline void KeyRange::set_start(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  start_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.KeyRange.start)
}
inline void KeyRange::set_start(const char* value, size_t size) {

  start_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.KeyRange.start)
}
inline ::std::string* KeyRange::mutable_start() {

  // @@protoc_insertion_point(field_mutable:eraftkv.KeyRange.start)
  return start_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeyRange::release_start() {
  // @@protoc_insertion_point(field_release:eraftkv.KeyRange.start)

  return start_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyRange::set_allocated_start(::std::string* start) {
  if (start != NULL) {

  } else {
  }
  start_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.KeyRange.start)
}

// string end = 5;
inline void KeyRange::clear_end() {
  end_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeyRange::end() const {
  // @@protoc_insertion_point(field_get:eraftkv.KeyRange.end)
  return end_.GetNoArena();
}
inline void KeyRange::set_end(const ::std::string& value) {

  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  value);
  // @@protoc_insertion_point(field_set:eraftkv.KeyRange.end)
}
#if LANG_CXX11
inline void KeyRange::set_end(::std::string&& value) {

  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.KeyRange.end)
}
#endif
inline void KeyRange::set_end(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.KeyRange.end)
}
inline void KeyRange::set_end(const char* value, size_t size) {

  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.KeyRange.end)
}
inline ::std::string* KeyRange::mutable_end() {

  // @@protoc_insertion_point(field_mutable:eraftkv.KeyRange.end)
  return end_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeyRange::release_end() {
  // @@protoc_insertion_point(field_release:eraftkv.KeyRange.end)

  return end_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyRange::set_allocated_end(::std::string* end) {
  if (end != NULL) {

  } else {
  }
  end_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), end);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.KeyRange.end)
}

// -------------------------------------------------------------------

// Server

// string id = 1;
inline void Server::clear_id() {
  id_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server::id() const {
  // @@protoc_insertion_point(field_get:eraftkv.Server.id)
  return id_.GetNoArena();
}
inline void Server::set_id(const ::std::string& value) {

  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                 value);
  // @@protoc_insertion_point(field_set:eraftkv.Server.id)
}
#if LANG_CXX11
inline void Server::set_id(::std::string&& value) {

  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                 ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.Server.id)
}
#endif
inline void Server::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                 ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.Server.id)
}
inline void Server::set_id(const char* value, size_t size) {

  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                 ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.Server.id)
}
inline ::std::string* Server::mutable_id() {

  // @@protoc_insertion_point(field_mutable:eraftkv.Server.id)
  return id_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server::release_id() {
  // @@protoc_insertion_point(field_release:eraftkv.Server.id)

  return id_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server::set_allocated_id(::std::string* id) {
  if (id != NULL) {

  } else {
  }
  id_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.Server.id)
}

// string address = 2;
inline void Server::clear_address() {
  address_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server::address() const {
  // @@protoc_insertion_point(field_get:eraftkv.Server.address)
  return address_.GetNoArena();
}
inline void Server::set_address(const ::std::string& value) {

  address_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftkv.Server.address)
}
#if LANG_CXX11
inline void Server::set_address(::std::string&& value) {

  address_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.Server.address)
}
#endif
inline void Server::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  address_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.Server.address)
}
inline void Server::set_address(const char* value, size_t size) {

  address_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.Server.address)
}
inline ::std::string* Server::mutable_address() {

  // @@protoc_insertion_point(field_mutable:eraftkv.Server.address)
  return address_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server::release_address() {
  // @@protoc_insertion_point(field_release:eraftkv.Server.address)

  return address_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server::set_allocated_address(::std::string* address) {
  if (address != NULL) {

  } else {
  }
  address_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.Server.address)
}

// .eraftkv.ServerStatus server_status = 3;
inline void Server::clear_server_status() {
  server_status_ = 0;
}
inline ::eraftkv::ServerStatus Server::server_status() const {
  // @@protoc_insertion_point(field_get:eraftkv.Server.server_status)
  return static_cast<::eraftkv::ServerStatus>(server_status_);
}
inline void Server::set_server_status(::eraftkv::ServerStatus value) {

  server_status_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.Server.server_status)
}

// -------------------------------------------------------------------

// ShardGroup

// int64 id = 1;
inline void ShardGroup::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ShardGroup::id() const {
  // @@protoc_insertion_point(field_get:eraftkv.ShardGroup.id)
  return id_;
}
inline void ShardGroup::set_id(::google::protobuf::int64 value) {

  id_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.ShardGroup.id)
}

// .eraftkv.KeyRange key_range = 2;
inline bool ShardGroup::has_key_range() const {
  return this != internal_default_instance() && key_range_ != NULL;
}
inline void ShardGroup::clear_key_range() {
  if (GetArenaNoVirtual() == NULL && key_range_ != NULL) {
    delete key_range_;
  }
  key_range_ = NULL;
}
inline const ::eraftkv::KeyRange& ShardGroup::_internal_key_range() const {
  return *key_range_;
}
inline const ::eraftkv::KeyRange& ShardGroup::key_range() const {
  const ::eraftkv::KeyRange* p = key_range_;
  // @@protoc_insertion_point(field_get:eraftkv.ShardGroup.key_range)
  return p != NULL ? *p
                   : *reinterpret_cast<const ::eraftkv::KeyRange*>(
                         &::eraftkv::_KeyRange_default_instance_);
}
inline ::eraftkv::KeyRange* ShardGroup::release_key_range() {
  // @@protoc_insertion_point(field_release:eraftkv.ShardGroup.key_range)

  ::eraftkv::KeyRange* temp = key_range_;
  key_range_ = NULL;
  return temp;
}
inline ::eraftkv::KeyRange* ShardGroup::mutable_key_range() {

  if (key_range_ == NULL) {
    auto* p = CreateMaybeMessage<::eraftkv::KeyRange>(GetArenaNoVirtual());
    key_range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eraftkv.ShardGroup.key_range)
  return key_range_;
}
inline void ShardGroup::set_allocated_key_range(
    ::eraftkv::KeyRange* key_range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete key_range_;
  }
  if (key_range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_range, submessage_arena);
    }

  } else {
  }
  key_range_ = key_range;
  // @@protoc_insertion_point(field_set_allocated:eraftkv.ShardGroup.key_range)
}

// repeated .eraftkv.Server servers = 3;
inline int ShardGroup::servers_size() const {
  return servers_.size();
}
inline void ShardGroup::clear_servers() {
  servers_.Clear();
}
inline ::eraftkv::Server* ShardGroup::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:eraftkv.ShardGroup.servers)
  return servers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::eraftkv::Server>*
    ShardGroup::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:eraftkv.ShardGroup.servers)
  return &servers_;
}
inline const ::eraftkv::Server& ShardGroup::servers(int index) const {
  // @@protoc_insertion_point(field_get:eraftkv.ShardGroup.servers)
  return servers_.Get(index);
}
inline ::eraftkv::Server* ShardGroup::add_servers() {
  // @@protoc_insertion_point(field_add:eraftkv.ShardGroup.servers)
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField<::eraftkv::Server>&
    ShardGroup::servers() const {
  // @@protoc_insertion_point(field_list:eraftkv.ShardGroup.servers)
  return servers_;
}

// -------------------------------------------------------------------

// ClusterConfigChangeReq

// .eraftkv.ClusterConfigChangeType change_type = 1;
inline void ClusterConfigChangeReq::clear_change_type() {
  change_type_ = 0;
}
inline ::eraftkv::ClusterConfigChangeType ClusterConfigChangeReq::change_type()
    const {
  // @@protoc_insertion_point(field_get:eraftkv.ClusterConfigChangeReq.change_type)
  return static_cast<::eraftkv::ClusterConfigChangeType>(change_type_);
}
inline void ClusterConfigChangeReq::set_change_type(
    ::eraftkv::ClusterConfigChangeType value) {

  change_type_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.ClusterConfigChangeReq.change_type)
}

// int64 shard_id = 2;
inline void ClusterConfigChangeReq::clear_shard_id() {
  shard_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ClusterConfigChangeReq::shard_id() const {
  // @@protoc_insertion_point(field_get:eraftkv.ClusterConfigChangeReq.shard_id)
  return shard_id_;
}
inline void ClusterConfigChangeReq::set_shard_id(
    ::google::protobuf::int64 value) {

  shard_id_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.ClusterConfigChangeReq.shard_id)
}

// .eraftkv.Server server = 3;
inline bool ClusterConfigChangeReq::has_server() const {
  return this != internal_default_instance() && server_ != NULL;
}
inline void ClusterConfigChangeReq::clear_server() {
  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
}
inline const ::eraftkv::Server& ClusterConfigChangeReq::_internal_server()
    const {
  return *server_;
}
inline const ::eraftkv::Server& ClusterConfigChangeReq::server() const {
  const ::eraftkv::Server* p = server_;
  // @@protoc_insertion_point(field_get:eraftkv.ClusterConfigChangeReq.server)
  return p != NULL ? *p
                   : *reinterpret_cast<const ::eraftkv::Server*>(
                         &::eraftkv::_Server_default_instance_);
}
inline ::eraftkv::Server* ClusterConfigChangeReq::release_server() {
  // @@protoc_insertion_point(field_release:eraftkv.ClusterConfigChangeReq.server)

  ::eraftkv::Server* temp = server_;
  server_ = NULL;
  return temp;
}
inline ::eraftkv::Server* ClusterConfigChangeReq::mutable_server() {

  if (server_ == NULL) {
    auto* p = CreateMaybeMessage<::eraftkv::Server>(GetArenaNoVirtual());
    server_ = p;
  }
  // @@protoc_insertion_point(field_mutable:eraftkv.ClusterConfigChangeReq.server)
  return server_;
}
inline void ClusterConfigChangeReq::set_allocated_server(
    ::eraftkv::Server* server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_;
  }
  if (server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server, submessage_arena);
    }

  } else {
  }
  server_ = server;
  // @@protoc_insertion_point(field_set_allocated:eraftkv.ClusterConfigChangeReq.server)
}

// int64 config_version = 4;
inline void ClusterConfigChangeReq::clear_config_version() {
  config_version_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ClusterConfigChangeReq::config_version()
    const {
  // @@protoc_insertion_point(field_get:eraftkv.ClusterConfigChangeReq.config_version)
  return config_version_;
}
inline void ClusterConfigChangeReq::set_config_version(
    ::google::protobuf::int64 value) {

  config_version_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.ClusterConfigChangeReq.config_version)
}

// -------------------------------------------------------------------

// ClusterConfigChangeResp

// bool success = 1;
inline void ClusterConfigChangeResp::clear_success() {
  success_ = false;
}
inline bool ClusterConfigChangeResp::success() const {
  // @@protoc_insertion_point(field_get:eraftkv.ClusterConfigChangeResp.success)
  return success_;
}
inline void ClusterConfigChangeResp::set_success(bool value) {

  success_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.ClusterConfigChangeResp.success)
}

// repeated .eraftkv.ShardGroup shard_group = 2;
inline int ClusterConfigChangeResp::shard_group_size() const {
  return shard_group_.size();
}
inline void ClusterConfigChangeResp::clear_shard_group() {
  shard_group_.Clear();
}
inline ::eraftkv::ShardGroup* ClusterConfigChangeResp::mutable_shard_group(
    int index) {
  // @@protoc_insertion_point(field_mutable:eraftkv.ClusterConfigChangeResp.shard_group)
  return shard_group_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::eraftkv::ShardGroup>*
    ClusterConfigChangeResp::mutable_shard_group() {
  // @@protoc_insertion_point(field_mutable_list:eraftkv.ClusterConfigChangeResp.shard_group)
  return &shard_group_;
}
inline const ::eraftkv::ShardGroup& ClusterConfigChangeResp::shard_group(
    int index) const {
  // @@protoc_insertion_point(field_get:eraftkv.ClusterConfigChangeResp.shard_group)
  return shard_group_.Get(index);
}
inline ::eraftkv::ShardGroup* ClusterConfigChangeResp::add_shard_group() {
  // @@protoc_insertion_point(field_add:eraftkv.ClusterConfigChangeResp.shard_group)
  return shard_group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField<::eraftkv::ShardGroup>&
    ClusterConfigChangeResp::shard_group() const {
  // @@protoc_insertion_point(field_list:eraftkv.ClusterConfigChangeResp.shard_group)
  return shard_group_;
}

// int64 config_version = 3;
inline void ClusterConfigChangeResp::clear_config_version() {
  config_version_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ClusterConfigChangeResp::config_version()
    const {
  // @@protoc_insertion_point(field_get:eraftkv.ClusterConfigChangeResp.config_version)
  return config_version_;
}
inline void ClusterConfigChangeResp::set_config_version(
    ::google::protobuf::int64 value) {

  config_version_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.ClusterConfigChangeResp.config_version)
}

// -------------------------------------------------------------------

// KvOpPair

// .eraftkv.ClientOpType op_type = 1;
inline void KvOpPair::clear_op_type() {
  op_type_ = 0;
}
inline ::eraftkv::ClientOpType KvOpPair::op_type() const {
  // @@protoc_insertion_point(field_get:eraftkv.KvOpPair.op_type)
  return static_cast<::eraftkv::ClientOpType>(op_type_);
}
inline void KvOpPair::set_op_type(::eraftkv::ClientOpType value) {

  op_type_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.KvOpPair.op_type)
}

// string key = 2;
inline void KvOpPair::clear_key() {
  key_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvOpPair::key() const {
  // @@protoc_insertion_point(field_get:eraftkv.KvOpPair.key)
  return key_.GetNoArena();
}
inline void KvOpPair::set_key(const ::std::string& value) {

  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  value);
  // @@protoc_insertion_point(field_set:eraftkv.KvOpPair.key)
}
#if LANG_CXX11
inline void KvOpPair::set_key(::std::string&& value) {

  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.KvOpPair.key)
}
#endif
inline void KvOpPair::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.KvOpPair.key)
}
inline void KvOpPair::set_key(const char* value, size_t size) {

  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.KvOpPair.key)
}
inline ::std::string* KvOpPair::mutable_key() {

  // @@protoc_insertion_point(field_mutable:eraftkv.KvOpPair.key)
  return key_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvOpPair::release_key() {
  // @@protoc_insertion_point(field_release:eraftkv.KvOpPair.key)

  return key_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvOpPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {

  } else {
  }
  key_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.KvOpPair.key)
}

// string value = 3;
inline void KvOpPair::clear_value() {
  value_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvOpPair::value() const {
  // @@protoc_insertion_point(field_get:eraftkv.KvOpPair.value)
  return value_.GetNoArena();
}
inline void KvOpPair::set_value(const ::std::string& value) {

  value_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftkv.KvOpPair.value)
}
#if LANG_CXX11
inline void KvOpPair::set_value(::std::string&& value) {

  value_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:eraftkv.KvOpPair.value)
}
#endif
inline void KvOpPair::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);

  value_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftkv.KvOpPair.value)
}
inline void KvOpPair::set_value(const char* value, size_t size) {

  value_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftkv.KvOpPair.value)
}
inline ::std::string* KvOpPair::mutable_value() {

  // @@protoc_insertion_point(field_mutable:eraftkv.KvOpPair.value)
  return value_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvOpPair::release_value() {
  // @@protoc_insertion_point(field_release:eraftkv.KvOpPair.value)

  return value_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvOpPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {

  } else {
  }
  value_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:eraftkv.KvOpPair.value)
}

// uint64 cursor = 4;
inline void KvOpPair::clear_cursor() {
  cursor_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 KvOpPair::cursor() const {
  // @@protoc_insertion_point(field_get:eraftkv.KvOpPair.cursor)
  return cursor_;
}
inline void KvOpPair::set_cursor(::google::protobuf::uint64 value) {

  cursor_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.KvOpPair.cursor)
}

// -------------------------------------------------------------------

// ClientOperationReq

// uint64 op_timestamp = 1;
inline void ClientOperationReq::clear_op_timestamp() {
  op_timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientOperationReq::op_timestamp() const {
  // @@protoc_insertion_point(field_get:eraftkv.ClientOperationReq.op_timestamp)
  return op_timestamp_;
}
inline void ClientOperationReq::set_op_timestamp(
    ::google::protobuf::uint64 value) {

  op_timestamp_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.ClientOperationReq.op_timestamp)
}

// repeated .eraftkv.KvOpPair kvs = 2;
inline int ClientOperationReq::kvs_size() const {
  return kvs_.size();
}
inline void ClientOperationReq::clear_kvs() {
  kvs_.Clear();
}
inline ::eraftkv::KvOpPair* ClientOperationReq::mutable_kvs(int index) {
  // @@protoc_insertion_point(field_mutable:eraftkv.ClientOperationReq.kvs)
  return kvs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair>*
    ClientOperationReq::mutable_kvs() {
  // @@protoc_insertion_point(field_mutable_list:eraftkv.ClientOperationReq.kvs)
  return &kvs_;
}
inline const ::eraftkv::KvOpPair& ClientOperationReq::kvs(int index) const {
  // @@protoc_insertion_point(field_get:eraftkv.ClientOperationReq.kvs)
  return kvs_.Get(index);
}
inline ::eraftkv::KvOpPair* ClientOperationReq::add_kvs() {
  // @@protoc_insertion_point(field_add:eraftkv.ClientOperationReq.kvs)
  return kvs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair>&
    ClientOperationReq::kvs() const {
  // @@protoc_insertion_point(field_list:eraftkv.ClientOperationReq.kvs)
  return kvs_;
}

// -------------------------------------------------------------------

// ClientOperationResp

// bool success = 1;
inline void ClientOperationResp::clear_success() {
  success_ = false;
}
inline bool ClientOperationResp::success() const {
  // @@protoc_insertion_point(field_get:eraftkv.ClientOperationResp.success)
  return success_;
}
inline void ClientOperationResp::set_success(bool value) {

  success_ = value;
  // @@protoc_insertion_point(field_set:eraftkv.ClientOperationResp.success)
}

// repeated .eraftkv.KvOpPair ops = 2;
inline int ClientOperationResp::ops_size() const {
  return ops_.size();
}
inline void ClientOperationResp::clear_ops() {
  ops_.Clear();
}
inline ::eraftkv::KvOpPair* ClientOperationResp::mutable_ops(int index) {
  // @@protoc_insertion_point(field_mutable:eraftkv.ClientOperationResp.ops)
  return ops_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair>*
    ClientOperationResp::mutable_ops() {
  // @@protoc_insertion_point(field_mutable_list:eraftkv.ClientOperationResp.ops)
  return &ops_;
}
inline const ::eraftkv::KvOpPair& ClientOperationResp::ops(int index) const {
  // @@protoc_insertion_point(field_get:eraftkv.ClientOperationResp.ops)
  return ops_.Get(index);
}
inline ::eraftkv::KvOpPair* ClientOperationResp::add_ops() {
  // @@protoc_insertion_point(field_add:eraftkv.ClientOperationResp.ops)
  return ops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField<::eraftkv::KvOpPair>&
    ClientOperationResp::ops() const {
  // @@protoc_insertion_point(field_list:eraftkv.ClientOperationResp.ops)
  return ops_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace eraftkv

namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::eraftkv::ErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::eraftkv::ErrorCode>() {
  return ::eraftkv::ErrorCode_descriptor();
}
template <>
struct is_proto_enum<::eraftkv::EntryType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::eraftkv::EntryType>() {
  return ::eraftkv::EntryType_descriptor();
}
template <>
struct is_proto_enum<::eraftkv::KeyRangeStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::eraftkv::KeyRangeStatus>() {
  return ::eraftkv::KeyRangeStatus_descriptor();
}
template <>
struct is_proto_enum<::eraftkv::ServerStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::eraftkv::ServerStatus>() {
  return ::eraftkv::ServerStatus_descriptor();
}
template <>
struct is_proto_enum<::eraftkv::ClusterConfigChangeType> : ::std::true_type {};
template <>
inline const EnumDescriptor*
    GetEnumDescriptor<::eraftkv::ClusterConfigChangeType>() {
  return ::eraftkv::ClusterConfigChangeType_descriptor();
}
template <>
struct is_proto_enum<::eraftkv::ClientOpType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::eraftkv::ClientOpType>() {
  return ::eraftkv::ClientOpType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_eraftkv_2eproto
